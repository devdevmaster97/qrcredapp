'use client';

import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import { FaCheckCircle, FaHome, FaStar, FaExternalLinkAlt, FaSignature, FaWhatsapp } from 'react-icons/fa';
import { isAssinaturaCompleta, marcarAssinaturaCompleta, abrirCanalAntecipacao, ZAPSIGN_URL, extrairSignerTokenDaUrl } from '@/app/utils/assinatura';

export default function SucessoAdesao() {
  const router = useRouter();
  const [assinaturaCompleta, setAssinaturaCompleta] = useState(false);

  const voltarDashboard = () => {
    router.push('/dashboard');
  };

  const abrirZapSign = async () => {
    try {
      // üîç DEBUG: Testar API ZapSign antes de abrir o link
      console.log('üîç [DEBUG] Iniciando teste da API ZapSign...');
      
      // Extrair signer_token da URL do ZapSign
      const signerToken = extrairSignerTokenDaUrl(ZAPSIGN_URL);
      
      if (!signerToken) {
        alert('üêõ DEBUG: N√£o foi poss√≠vel extrair signer_token da URL');
        console.error('‚ùå Signer token n√£o encontrado na URL:', ZAPSIGN_URL);
        return;
      }

      console.log('‚úÖ Signer token extra√≠do:', signerToken);
      
      // Fazer chamada para a API de verifica√ß√£o
      const zapSignResponse = await fetch('/api/verificar-assinatura-zapsign', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          signer_token: signerToken
        })
      });

      const zapSignData = await zapSignResponse.json();
      
      // Detectar tipo de token pela URL
      const isDocumentPattern = ZAPSIGN_URL.includes('/doc/');
      const tokenType = isDocumentPattern ? 'Document ID' : 'Signer Token';
      
      // Popup de debug detalhado
      const debugInfo = `
üîç DEBUG - Teste API ZapSign
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

üåê URL ZapSign Original:
‚Ä¢ ${ZAPSIGN_URL}

üîë Token Extra√≠do:
‚Ä¢ Tipo: ${tokenType}
‚Ä¢ Valor: ${signerToken}
‚Ä¢ Padr√£o: ${isDocumentPattern ? '/verificar/doc/{id}' : '/verificar/{signer_token}'}

üåê API Endpoint Testada:
‚Ä¢ https://api.zapsign.com.br/api/v1/signers/${signerToken}/

üì• Resposta da API:
‚Ä¢ Status HTTP: ${zapSignResponse.status}
‚Ä¢ Status Text: ${zapSignResponse.statusText}
‚Ä¢ Success: ${zapSignData.success || 'N/A'}
‚Ä¢ Status Assinatura: ${zapSignData.status || 'N/A'}
‚Ä¢ Message: ${zapSignData.message || 'N/A'}

üìä Dados Completos da Resposta:
${JSON.stringify(zapSignData, null, 2)}

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ö†Ô∏è  Este popup √© apenas para debug em desenvolvimento
üöÄ Ades√£o ao Sascred foi conclu√≠da com sucesso!

Clique em OK para abrir o ZapSign...
      `;
      
      alert(debugInfo);
      console.log('üêõ [DEBUG] Dados completos ZapSign:', zapSignData);
      
    } catch (debugError) {
      console.error('üêõ [DEBUG] Erro ao testar API ZapSign:', debugError);
      const errorMessage = debugError instanceof Error ? debugError.message : String(debugError);
      alert(`üêõ DEBUG ERROR - ZapSign API:\n${errorMessage}\n\nClique em OK para continuar com o ZapSign...`);
    }
    
    // Abrir ZapSign em nova aba para manter o app aberto
    window.open(ZAPSIGN_URL, '_blank');
  };

  // Verificar ao carregar a p√°gina se a assinatura j√° foi completa
  useEffect(() => {
    setAssinaturaCompleta(isAssinaturaCompleta());
  }, []);

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-green-50 py-8">
      <div className="max-w-2xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="bg-white rounded-2xl shadow-xl p-8 text-center">
          {/* √çcone de Sucesso */}
          <div className="mb-6">
            <div className="mx-auto w-20 h-20 bg-green-100 rounded-full flex items-center justify-center">
              <FaCheckCircle className="text-green-600 text-4xl" />
            </div>
          </div>

          {/* T√≠tulo */}
          <h1 className="text-3xl font-bold text-gray-800 mb-4">
            üéâ Parab√©ns!
          </h1>

          {/* Mensagem Principal */}
          <div className="mb-8">
            <h2 className="text-xl font-semibold text-blue-600 mb-4 flex items-center justify-center">
              <FaStar className="text-yellow-500 mr-2" />
              Voc√™ aderiu ao Sascred com sucesso!
            </h2>
            
            <div className="bg-blue-50 rounded-lg p-6 mb-6">
              <p className="text-gray-700 leading-relaxed mb-4">
                <strong>Obrigado por aceitar os termos de ades√£o ao Sascred!</strong>
              </p>
              
              <p className="text-gray-600 leading-relaxed mb-4">
                Sua solicita√ß√£o foi enviada para nossa central de atendimento. Nossa equipe ir√° processar sua ades√£o e entrar em contato com voc√™ em breve.
              </p>

              <div className="bg-white rounded-md p-4 border-l-4 border-blue-500">
                <p className="text-sm text-gray-600">
                  <strong>Pr√≥ximos passos:</strong>
                </p>
                <ul className="text-sm text-gray-600 mt-2 space-y-1">
                  <li>‚Ä¢ Complete a verifica√ß√£o digital no link abaixo</li>
                  <li>‚Ä¢ A taxa de R$ 7,50 mensal ser√° cobrada conforme informado</li>
                  <li>‚Ä¢ Em breve voc√™ ter√° acesso ao painel de cr√©ditos Sascred</li>
                </ul>
              </div>
            </div>
          </div>

          {/* Bot√£o para ZapSign */}
          <div className="mb-6">
            <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4">
              <div className="flex items-center justify-center mb-2">
                <FaSignature className="text-yellow-600 mr-2" />
                <span className="text-sm font-semibold text-yellow-800">
                  Assinatura Digital Necess√°ria
                </span>
              </div>
              <p className="text-sm text-yellow-700 mb-3">
                Para finalizar seu processo de ades√£o, √© necess√°rio completar a verifica√ß√£o de assinatura digital.
              </p>
              <button
                onClick={abrirZapSign}
                className="bg-yellow-600 hover:bg-yellow-700 text-white font-semibold py-2 px-6 rounded-lg transition-colors duration-200 flex items-center mx-auto"
              >
                <FaSignature className="mr-2" />
                Completar Verifica√ß√£o
                <FaExternalLinkAlt className="ml-2 text-sm" />
              </button>
            </div>

            {/* Canal de Antecipa√ß√£o ou Mensagem sobre novidade */}
            {assinaturaCompleta ? (
              <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                <div className="flex items-center justify-center mb-3">
                  <FaWhatsapp className="text-green-600 mr-2" />
                  <span className="text-sm font-semibold text-green-800">
                    Canal de Antecipa√ß√£o Liberado! üéâ
                  </span>
                </div>
                <p className="text-sm text-green-700 text-center mb-4">
                  <strong>‚úÖ Assinatura Digital Completa!</strong><br/>
                  Agora voc√™ pode solicitar sua Antecipa√ß√£o de Cr√©dito atrav√©s do nosso canal exclusivo no WhatsApp.
                </p>
                <button
                  onClick={abrirCanalAntecipacao}
                  className="bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-6 rounded-lg transition-colors duration-200 flex items-center mx-auto"
                >
                  <FaWhatsapp className="mr-2" />
                  Solicitar Antecipa√ß√£o
                  <FaExternalLinkAlt className="ml-2 text-sm" />
                </button>
              </div>
            ) : (
              <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                <div className="flex items-center justify-center mb-2">
                  <FaStar className="text-green-600 mr-2" />
                  <span className="text-sm font-semibold text-green-800">
                    Novidade em Breve!
                  </span>
                </div>
                <p className="text-sm text-green-700 text-center">
                  <strong>üöÄ Ap√≥s a finaliza√ß√£o da sua ades√£o</strong>, ser√° liberado neste app um canal exclusivo para <strong>solicita√ß√£o de Antecipa√ß√£o de Cr√©dito</strong>. Fique atento √†s novidades!
                </p>
              </div>
            )}
          </div>



          {/* Bot√£o de Retorno */}
          <button
            onClick={voltarDashboard}
            className="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-8 rounded-lg transition-colors duration-200 flex items-center mx-auto"
          >
            <FaHome className="mr-2" />
            Voltar ao Dashboard
          </button>
        </div>
      </div>
    </div>
  );
} 