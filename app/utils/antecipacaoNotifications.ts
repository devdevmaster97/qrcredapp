/**
 * Sistema de notifica√ß√µes para aprova√ß√£o de antecipa√ß√£o
 * Similar ao sascredNotifications.ts
 */

// Chave para armazenar flag de verifica√ß√£o for√ßada
const FORCE_CHECK_KEY = 'antecipacao_force_check';
const LAST_CHECK_KEY = 'antecipacao_last_check';

/**
 * Marca que uma verifica√ß√£o de aprova√ß√£o deve ser for√ßada
 */
export function forceAntecipacaoCheck() {
  if (typeof window !== 'undefined') {
    localStorage.setItem(FORCE_CHECK_KEY, Date.now().toString());
    console.log('üîî Marcado para verifica√ß√£o for√ßada da antecipa√ß√£o');
  }
}

/**
 * Verifica se deve for√ßar uma verifica√ß√£o
 */
export function shouldForceAntecipacaoCheck(): boolean {
  if (typeof window === 'undefined') return false;
  
  const forceCheck = localStorage.getItem(FORCE_CHECK_KEY);
  const lastCheck = localStorage.getItem(LAST_CHECK_KEY);
  
  if (!forceCheck) return false;
  
  const forceTime = parseInt(forceCheck);
  const lastTime = lastCheck ? parseInt(lastCheck) : 0;
  
  // For√ßar verifica√ß√£o se a marca for mais recente que a √∫ltima verifica√ß√£o
  return forceTime > lastTime;
}

/**
 * Marca que a verifica√ß√£o foi realizada
 */
export function markAntecipacaoChecked() {
  if (typeof window !== 'undefined') {
    const now = Date.now().toString();
    localStorage.setItem(LAST_CHECK_KEY, now);
    localStorage.removeItem(FORCE_CHECK_KEY);
    console.log('‚úÖ Verifica√ß√£o da antecipa√ß√£o marcada como realizada');
  }
}

/**
 * Limpa todas as flags de verifica√ß√£o
 */
export function clearAntecipacaoFlags() {
  if (typeof window !== 'undefined') {
    localStorage.removeItem(FORCE_CHECK_KEY);
    localStorage.removeItem(LAST_CHECK_KEY);
    console.log('üßπ Flags de verifica√ß√£o da antecipa√ß√£o limpas');
  }
}

/**
 * Trigger para verifica√ß√£o imediata da antecipa√ß√£o
 * Deve ser chamado quando h√° suspeita de que o status mudou
 */
export function triggerAntecipacaoVerification() {
  forceAntecipacaoCheck();
  
  // Disparar evento customizado para componentes que escutam
  if (typeof window !== 'undefined') {
    const event = new CustomEvent('antecipacaoStatusChanged', {
      detail: { timestamp: Date.now() }
    });
    window.dispatchEvent(event);
    console.log('üöÄ Evento de verifica√ß√£o da antecipa√ß√£o disparado');
  }
}
